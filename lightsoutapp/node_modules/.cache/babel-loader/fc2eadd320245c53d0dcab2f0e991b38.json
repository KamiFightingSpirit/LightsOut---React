{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\src\\\\Components\\\\Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nvar Cell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cell, _Component);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick(evt) {\n      // call up to the board to flip cells around this cell\n      console.log(\"this is the event \" + evt);\n      this.props.flipCellsAroundMe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n      return React.createElement(\"td\", {\n        className: classes,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport default Cell;","map":{"version":3,"sources":["C:/Users/DeHuff/Desktop/Coding/Modern React Bootcamp/12_LightsOut/lightsoutapp/src/Components/Cell.js"],"names":["React","Component","Cell","props","handleClick","bind","evt","console","log","flipCellsAroundMe","classes","isLit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAEA;;;;;;;;;;;;;IAaMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAFiB;AAGlB;;;;gCAEWC,G,EAAK;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAnC;AACA,WAAKH,KAAL,CAAWM,iBAAX;AACD;;;6BAEQ;AAEP,UAAIC,OAAO,GAAG,UAAU,KAAKP,KAAL,CAAWQ,KAAX,GAAmB,WAAnB,GAAiC,EAA3C,CAAd;AAEA,aACI;AAAI,QAAA,SAAS,EAAED,OAAf;AAAwB,QAAA,OAAO,EAAE,KAAKN,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAID;;;;EApBgBH,S;;AAwBnB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n    console.log(\"this is the event \" + evt)\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n  \n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n      \n    )\n  }\n}\n\n\nexport default Cell"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//want to go in and grab board[0][0] + board[1][0] + board[2][0] + .... board[n][0] then % 2 === 0\n//next steps would be board[0][1] + ..... board[n][n] \n//There is another way... if the counter is > 0, then you toggle that cell.\n// function validBoard(ncols, nrows, board) {\n//     let counter = 0;\n//     let counterCheck = 0;\n//     for(let i = 0; i < nrows ; i++) {\n//         for(let k = 0; k < ncols; k++) {\n//             if(board[k][i]){\n//                 counter += 1;\n//             }        \n//         }\n//         if(counter % 2 !== 0) {\n//             counterCheck += 1;\n//         }\n//         counter = 0;\n//     }\n//     return counterCheck === 0 ? true : false;    \n// }\n// export { validBoard };\nfunction validBoard(ncols, nrows, board) {\n  var counter = 0;\n  var counterCheck = 0;\n  var k = 0;\n\n  for (var i = 0; i < nrows; i++) {\n    for (k = 0; k < ncols; k++) {\n      if (board[k][i]) {\n        counter += 1;\n      }\n    }\n\n    if (counter % 2 !== 0) {\n      board[k][i] = !board[k][i];\n    }\n\n    counter = 0;\n  }\n\n  return board;\n}\n\nexport { validBoard };","map":{"version":3,"sources":["C:/Users/DeHuff/Desktop/Coding/Modern React Bootcamp/12_LightsOut/lightsoutapp/src/Helper Functions/validBoard.js"],"names":["validBoard","ncols","nrows","board","counter","counterCheck","k","i"],"mappings":"AACM;AACA;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AACrC,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAnB,EAA2BK,CAAC,EAA5B,EAAgC;AAC5B,SAAID,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGL,KAAf,EAAsBK,CAAC,EAAvB,EAA2B;AACvB,UAAGH,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,CAAH,EAAe;AACXH,QAAAA,OAAO,IAAI,CAAX;AACH;AACJ;;AACD,QAAGA,OAAO,GAAG,CAAV,KAAgB,CAAnB,EAAsB;AAClBD,MAAAA,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,IAAc,CAACJ,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,CAAf;AACH;;AACDH,IAAAA,OAAO,GAAG,CAAV;AACH;;AACD,SAAOD,KAAP;AACH;;AAID,SAASH,UAAT","sourcesContent":["\r\n      //want to go in and grab board[0][0] + board[1][0] + board[2][0] + .... board[n][0] then % 2 === 0\r\n      //next steps would be board[0][1] + ..... board[n][n] \r\n      //There is another way... if the counter is > 0, then you toggle that cell.\r\n// function validBoard(ncols, nrows, board) {\r\n//     let counter = 0;\r\n//     let counterCheck = 0;\r\n//     for(let i = 0; i < nrows ; i++) {\r\n//         for(let k = 0; k < ncols; k++) {\r\n//             if(board[k][i]){\r\n//                 counter += 1;\r\n//             }        \r\n//         }\r\n//         if(counter % 2 !== 0) {\r\n//             counterCheck += 1;\r\n//         }\r\n//         counter = 0;\r\n//     }\r\n//     return counterCheck === 0 ? true : false;    \r\n// }\r\n\r\n\r\n\r\n// export { validBoard };\r\n\r\nfunction validBoard(ncols, nrows, board) {\r\n    let counter = 0;\r\n    let counterCheck = 0;\r\n    let k = 0;\r\n    for(let i = 0; i < nrows ; i++) {\r\n        for(k = 0; k < ncols; k++) {\r\n            if(board[k][i]){\r\n                counter += 1;\r\n            }        \r\n        }\r\n        if(counter % 2 !== 0) {\r\n            board[k][i] = !board[k][i];\r\n        }\r\n        counter = 0;\r\n    }\r\n    return board;    \r\n}\r\n\r\n\r\n\r\nexport { validBoard };"]},"metadata":{},"sourceType":"module"}
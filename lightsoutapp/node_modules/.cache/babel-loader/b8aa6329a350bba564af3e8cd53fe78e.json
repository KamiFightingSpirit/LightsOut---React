{"ast":null,"code":"function flipCell(y, x, board) {\n  var _this$state = this.state,\n      ncols = _this$state.ncols,\n      nrows = _this$state.nrows; // if this coord is actually on board, flip it\n  //FLIP SELF\n\n  board[y][x] = !board[y][x]; //FLIP TOP\n\n  if (y + 1 < ncols) {\n    board[y + 1][x] = !board[y + 1][x];\n  } //FLIP RIGHT      \n\n\n  if (x + 1 < nrows) {\n    board[y][x + 1] = !board[y][x + 1];\n  } //FLIP BOTTOM\n\n\n  if (y - 1 >= 0) {\n    board[y - 1][x] = !board[y - 1][x];\n  } //Flip LEFT      \n\n\n  if (x - 1 >= 0) {\n    board[y][x - 1] = !board[y][x - 1];\n  }\n}\n\nexport { flipCell };","map":{"version":3,"sources":["C:/Users/DeHuff/Desktop/Coding/Modern React Bootcamp/12_LightsOut/lightsoutapp/src/Helper Functions/flipCell.js"],"names":["flipCell","y","x","board","state","ncols","nrows"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,KAAxB,EAA+B;AAAA,oBACN,KAAKC,KADC;AAAA,MACtBC,KADsB,eACtBA,KADsB;AAAA,MACfC,KADe,eACfA,KADe,EAE3B;AACA;;AACAH,EAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,IAAc,CAACC,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,CAAf,CAJ2B,CAK3B;;AACA,MAAID,CAAC,GAAC,CAAF,GAAMI,KAAV,EAAiB;AACfF,IAAAA,KAAK,CAACF,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,IAAgB,CAACC,KAAK,CAACF,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,CAAjB;AACD,GAR0B,CAS3B;;;AACA,MAAIA,CAAC,GAAC,CAAF,GAAMI,KAAV,EAAkB;AAChBH,IAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,IAAgB,CAACC,KAAK,CAACF,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,CAAjB;AACD,GAZ0B,CAa3B;;;AACA,MAAID,CAAC,GAAC,CAAF,IAAO,CAAX,EAAc;AACZE,IAAAA,KAAK,CAACF,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,IAAgB,CAACC,KAAK,CAACF,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,CAAjB;AACD,GAhB0B,CAiB3B;;;AACA,MAAIA,CAAC,GAAC,CAAF,IAAO,CAAX,EAAc;AACdC,IAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,IAAgB,CAACC,KAAK,CAACF,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,CAAjB;AACC;AACF;;AAGH,SAASF,QAAT","sourcesContent":["function flipCell(y, x, board) {\r\n    let {ncols, nrows} = this.state;\r\n    // if this coord is actually on board, flip it\r\n    //FLIP SELF\r\n    board[y][x] = !board[y][x];      \r\n    //FLIP TOP\r\n    if (y+1 < ncols) {\r\n      board[y+1][x] = !board[y+1][x];\r\n    }\r\n    //FLIP RIGHT      \r\n    if (x+1 < nrows ) {\r\n      board[y][x+1] = !board[y][x+1];\r\n    }\r\n    //FLIP BOTTOM\r\n    if (y-1 >= 0) {\r\n      board[y-1][x] = !board[y-1][x];\r\n    }\r\n    //Flip LEFT      \r\n    if (x-1 >= 0) {\r\n    board[y][x-1] = !board[y][x-1];\r\n    }    \r\n  }  \r\n\r\n\r\nexport { flipCell };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DeHuff\\\\Desktop\\\\Coding\\\\Modern React Bootcamp\\\\12_LightsOut\\\\lightsoutapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction flipCell() {\n  var _this$state = this.state,\n      ncols = _this$state.ncols,\n      nrows = _this$state.nrows;\n  var board = this.state.board.map(function (k) {\n    return k.map(function (i) {\n      return i;\n    });\n  });\n\n  var _coord$split$map = coord.split(\"-\").map(Number),\n      _coord$split$map2 = _slicedToArray(_coord$split$map, 2),\n      y = _coord$split$map2[0],\n      x = _coord$split$map2[1]; // if this coord is actually on board, flip it\n  //FLIP SELF\n\n\n  board[y][x] = !board[y][x]; //FLIP TOP\n\n  if (y + 1 < ncols) {\n    board[y + 1][x] = !board[y + 1][x];\n  } //FLIP RIGHT      \n\n\n  if (x + 1 < nrows) {\n    board[y][x + 1] = !board[y][x + 1];\n  } //FLIP BOTTOM\n\n\n  if (y - 1 >= 0) {\n    board[y - 1][x] = !board[y - 1][x];\n  } //Flip LEFT      \n\n\n  if (x - 1 >= 0) {\n    board[y][x - 1] = !board[y][x - 1];\n  }\n}\n\nexport { flipCell };","map":{"version":3,"sources":["C:/Users/DeHuff/Desktop/Coding/Modern React Bootcamp/12_LightsOut/lightsoutapp/src/Helper Functions/flipCell.js"],"names":["flipCell","state","ncols","nrows","board","map","k","i","coord","split","Number","y","x"],"mappings":";;AAAA,SAASA,QAAT,GAAoB;AAAA,oBACK,KAAKC,KADV;AAAA,MACXC,KADW,eACXA,KADW;AAAA,MACJC,KADI,eACJA,KADI;AAEhB,MAAIC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACD,GAAF,CAAM,UAAAE,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAAP,CAAJ;AAAA,GAAtB,CAAZ;;AAFgB,yBAGHC,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBJ,GAAjB,CAAqBK,MAArB,CAHG;AAAA;AAAA,MAGXC,CAHW;AAAA,MAGRC,CAHQ,yBAIhB;AACA;;;AACAR,EAAAA,KAAK,CAACO,CAAD,CAAL,CAASC,CAAT,IAAc,CAACR,KAAK,CAACO,CAAD,CAAL,CAASC,CAAT,CAAf,CANgB,CAOhB;;AACA,MAAID,CAAC,GAAC,CAAF,GAAMT,KAAV,EAAiB;AACfE,IAAAA,KAAK,CAACO,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,IAAgB,CAACR,KAAK,CAACO,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,CAAjB;AACD,GAVe,CAWhB;;;AACA,MAAIA,CAAC,GAAC,CAAF,GAAMT,KAAV,EAAkB;AAChBC,IAAAA,KAAK,CAACO,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,IAAgB,CAACR,KAAK,CAACO,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,CAAjB;AACD,GAde,CAehB;;;AACA,MAAID,CAAC,GAAC,CAAF,IAAO,CAAX,EAAc;AACZP,IAAAA,KAAK,CAACO,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,IAAgB,CAACR,KAAK,CAACO,CAAC,GAAC,CAAH,CAAL,CAAWC,CAAX,CAAjB;AACD,GAlBe,CAmBhB;;;AACA,MAAIA,CAAC,GAAC,CAAF,IAAO,CAAX,EAAc;AACdR,IAAAA,KAAK,CAACO,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,IAAgB,CAACR,KAAK,CAACO,CAAD,CAAL,CAASC,CAAC,GAAC,CAAX,CAAjB;AACC;AACF;;AAGH,SAASZ,QAAT","sourcesContent":["function flipCell() {\r\n    let {ncols, nrows} = this.state;\r\n    let board = this.state.board.map(k => k.map(i => i));    \r\n    let [y, x] = coord.split(\"-\").map(Number);\r\n    // if this coord is actually on board, flip it\r\n    //FLIP SELF\r\n    board[y][x] = !board[y][x];      \r\n    //FLIP TOP\r\n    if (y+1 < ncols) {\r\n      board[y+1][x] = !board[y+1][x];\r\n    }\r\n    //FLIP RIGHT      \r\n    if (x+1 < nrows ) {\r\n      board[y][x+1] = !board[y][x+1];\r\n    }\r\n    //FLIP BOTTOM\r\n    if (y-1 >= 0) {\r\n      board[y-1][x] = !board[y-1][x];\r\n    }\r\n    //Flip LEFT      \r\n    if (x-1 >= 0) {\r\n    board[y][x-1] = !board[y][x-1];\r\n    }    \r\n  }  \r\n\r\n\r\nexport { flipCell };"]},"metadata":{},"sourceType":"module"}